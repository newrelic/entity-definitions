[
  {
    "confluent_kafka_server_consumer_lag_offsets": {
      "type": "gauge",
      "count": 352,
      "sum": 0,
      "min": 0,
      "max": 0,
      "latest": 0
    },
    "consumer_group_id": "agent_actions_vortex_vortex-3_23456",
    "description": "The lag between a group member's committed offset and the partition's high watermark.",
    "endTimestamp": 1719554400000,
    "http.scheme": "https",
    "instrumentation.provider": "opentelemetry",
    "kafka.cluster_name": "us-jurassic-dust",
    "kafka_id": "lkc-knjjjv",
    "metricName": "confluent_kafka_server_consumer_lag_offsets",
    "net.host.name": "api.telemetry.confluent.cloud",
    "net.host.port": "443",
    "newrelic.source": "api.metrics.otlp",
    "nr.dataPointCount": 352,
    "otel.library.name": "",
    "otel.library.version": "",
    "service.instance.id": "api.telemetry.confluent.cloud:443",
    "service.name": "confluent",
    "timestamp": 1719532800000,
    "topic": "agent_actions"
  },
  {
    "confluent_kafka_server_received_bytes": {
      "type": "gauge",
      "count": 312,
      "sum": 293255,
      "min": 0,
      "max": 74103,
      "latest": 2741
    },
    "description": "The delta count of bytes of the customer's data received from the network. Each sample is the number of bytes received since the previous data sample. The count is sampled every 60 seconds.",
    "endTimestamp": 1719554400000,
    "http.scheme": "https",
    "instrumentation.provider": "opentelemetry",
    "kafka.cluster_name": "stg-rat-hole",
    "kafka_id": "lkc-gx5zg1",
    "metricName": "confluent_kafka_server_received_bytes",
    "net.host.name": "api.telemetry.confluent.cloud",
    "net.host.port": "443",
    "newrelic.source": "api.metrics.otlp",
    "nr.dataPointCount": 312,
    "otel.library.name": "",
    "otel.library.version": "",
    "service.instance.id": "api.telemetry.confluent.cloud:443",
    "service.name": "confluent",
    "timestamp": 1719532800000,
    "topic": "connect_account_data_2",
    "unit": "bytes"
  },
  {
    "collector.name": "confluent-monitor",
    "collector.version": "release-11",
    "confluent.clusterId": "lkc-jr15qm",
    "confluent.clusterName": "cluster_0",
    "confluent.kafka.server.active_connection_count": {
      "type": "summary",
      "count": 1,
      "sum": 24,
      "min": 24,
      "max": 24
    },
    "confluent.kafka.server.metric.principal_id": "u-896ov5",
    "confluent.metricNamespace": "confluent.kafka.server",
    "confluent.region": "ap-south-2",
    "confluent.resourceGroup": "io.confluent.kafka.server",
    "confluent.resourceId": "lkc-jr15qm",
    "confluent.resourceType": "kafka.server",
    "endTimestamp": 1727184120000,
    "instrumentation.provider": "confluent",
    "metricName": "confluent.kafka.server.active_connection_count",
    "newrelic.cloudIntegrations.integrationId": "12",
    "newrelic.cloudIntegrations.integrationName": "Confluent Cloud",
    "newrelic.cloudIntegrations.providerAccountId": "0",
    "newrelic.cloudIntegrations.providerAccountName": "sa-6v61z6",
    "newrelic.source": "metricAPI",
    "timestamp": 1727183640000
  },
  {
    "collector.name": "confluent-monitor",
    "collector.version": "release-11",
    "confluent.clusterId": "lkc-jr15qm",
    "confluent.clusterName": "cluster_0",
    "confluent.kafka.server.metric.principal_id": "u-896ov5",
    "confluent.kafka.server.successful_authentication_count": {
      "type": "summary",
      "count": 1,
      "sum": 29,
      "min": 29,
      "max": 29
    },
    "confluent.metricNamespace": "confluent.kafka.server",
    "confluent.region": "ap-south-2",
    "confluent.resourceGroup": "io.confluent.kafka.server",
    "confluent.resourceId": "lkc-jr15qm",
    "confluent.resourceType": "kafka.server",
    "endTimestamp": 1727184000000,
    "instrumentation.provider": "confluent",
    "metricName": "confluent.kafka.server.successful_authentication_count",
    "newrelic.cloudIntegrations.integrationId": "12",
    "newrelic.cloudIntegrations.integrationName": "Confluent Cloud",
    "newrelic.cloudIntegrations.providerAccountId": "0",
    "newrelic.cloudIntegrations.providerAccountName": "sa-6v61z6",
    "newrelic.source": "metricAPI",
    "timestamp": 1727183640000
  }
]
