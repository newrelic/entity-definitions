consumers:
  title: Consumers
  unit: COUNT
  queries:
    newRelic:
      select: average(rabbitmq.queue.consumers)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    newRelicSample:
      select: average(queue.consumers)
      from: RabbitmqQueueSample
      eventId: entityGuid
      eventName: entityName
messagesDelivered:
  title: Messages delivered
  unit: COUNT
  queries:
    newRelic:
      select: sum(rabbitmq.queue.sumMessagesDelivered)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    newRelicSample:
      select: sum(queue.sumMessagesDelivered)
      from: RabbitmqQueueSample
      eventId: entityGuid
      eventName: entityName
messagesDeliveredPerSecond:
  title: Messages delivered per second
  unit: OPERATIONS_PER_SECOND
  queries:
    newRelic:
      select: average(rabbitmq.queue.sumMessagesDeliveredPerSecond)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    newRelicSample:
      select: average(queue.sumMessagesDeliveredPerSecond)
      from: RabbitmqQueueSample
      eventId: entityGuid
      eventName: entityName
messagesPublished:
  title: Messages published
  unit: COUNT
  queries:
    newRelic:
      select: sum(rabbitmq.queue.messagesPublished)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    newRelicSample:
      select: sum(queue.messagesPublished)
      from: RabbitmqQueueSample
      eventId: entityGuid
      eventName: entityName
messagesPublishedPerSecond:
  title: Messages published per second
  unit: OPERATIONS_PER_SECOND        
  queries:
    newRelic:
      select: average(rabbitmq.queue.messagesPublishedPerSecond)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    newRelicSample:
      select: average(queue.messagesPublishedPerSecond)
      from: RabbitmqQueueSample
      eventId: entityGuid
      eventName: entityName
