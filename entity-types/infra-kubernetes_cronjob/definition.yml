domain: INFRA
type: KUBERNETES_CRONJOB
configuration:
  entityExpirationTime: DAILY
  alertable: true
dashboardTemplates:
  newRelic:
    template: dashboard.json
    filterNRQLByEntityID: false
goldenTags:
  - k8s.cronjobName
  - k8s.clusterName
  - k8s.namespaceName
synthesis:
  rules:
    # kube-state-metrics data via opentelemetry prometheusReceiver
    - compositeIdentifier:
        separator: ":"
        attributes:
          - k8s.cluster.name
          - namespace
          - cronjob
      encodeIdentifierInGUID: true
      name: cronjob
      conditions:
        # kube-state-metrics cronjob prefix
        - attribute: metricName
          prefix: kube_cronjob_
        # identifier attributes
        - attribute: cronjob
          present: true
        - attribute: namespace
          present: true
        - attribute: k8s.cluster.name
          present: true
        # open telemetry
        - attribute: newrelic.source
          value: "api.metrics.otlp"
        # if service.name is present, it's a service
        - attribute: service.name
          present: false
        # value added for test entities only
        - attribute: newrelicOnly
          value: "true"
      tags:
        cronjob:
          entityTagNames: [k8s.cronjobName]
        namespace:
          entityTagNames: [k8s.namespaceName]
        k8s.cluster.name:
          entityTagNames: [k8s.clusterName]
        schedule:
          entityTagNames: [k8s.cronjob.schedule]

    # Infrastructure event data via opentelemetry
    # - compositeIdentifier:
    #     separator: ":"
    #     attributes:
    #       - k8s.cluster.name
    #       - k8.namespace.name
    #       - k8s.object.name
    #   encodeIdentifierInGUID: true
    #   name: k8s.object.name
    #   conditions:
    #     - attribute: event.name
    #       value: InfrastructureEvent
    #     - attribute: k8s.object.kind
    #       value: CronJob
    #     # identifier attributes
    #     - attribute: k8s.object.name
    #       present: true
    #     - attribute: k8.namespace.name
    #       present: true
    #     - attribute: k8s.cluster.name
    #       present: true
    #     # open telemetry
    #     - attribute: newrelic.source
    #       value: api.events.otlp
    #     # if service.name is present, handle as one
    #     - attribute: service.name
    #       present: false
    #     # value added for test entities only
    #     - attribute: newrelicOnly
    #       value: "true"
    - identifier: entityId
      name: cronjobName
      legacyFeatures:
        overrideGuidType: true
        useNonStandardAttributes: true
      conditions:
        - attribute: eventType
          value: K8sCronJobSample
        - attribute: cronjobName
          present: true
        - attribute: schedule
          present: true
      tags:
        clusterName:
          entityTagName: k8s.clusterName
        namespaceName:
          entityTagName: k8s.namespaceName
        namespace:
          entityTagName: k8s.namespaceName
        cronjobName:
          entityTagName: k8s.cronjobName
        schedule:
          entityTagName: k8s.cronjob.schedule
        concurrencyPolicy:
          entityTagName: k8s.cronjob.concurrencyPolicy
        instanceType:
          entityTagName: host.instanceType
        integrationName:
          entityTagName: newrelic.integrationName
        integrationVersion:
          entityTagName: newrelic.integrationVersion
        agentVersion:
          entityTagName: newrelic.agentVersion
        awsRegion:
          entityTagName: aws.region
        provider.awsRegion:
          entityTagName: aws.region
      prefixedTags:
        label.:
