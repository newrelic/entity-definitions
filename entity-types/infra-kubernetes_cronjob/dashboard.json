{
  "name" : "Kubernetes cronjob",
  "pages" : [ {
    "name" : "Kubernetes cronjob",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 1,
        "width" : 8
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "## CronJob Overview"
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 9,
        "row" : 1,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT filter(uniqueCount(jobName), WHERE isComplete = 'true') AS `Completed Jobs` FROM K8sJobSample WHERE clusterName = '{{{tags.k8s.clusterName}}}' AND namespaceName = '{{{tags.k8s.namespaceName}}}' AND jobName LIKE '{{{entity.name}}}-%' LIMIT MAX",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 10,
        "row" : 1,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT filter(uniqueCount(jobName), WHERE failed = 'true') AS `Failed Jobs` FROM K8sJobSample WHERE clusterName = '{{{tags.k8s.clusterName}}}' AND namespaceName = '{{{tags.k8s.namespaceName}}}' AND jobName LIKE '{{{entity.name}}}-%' LIMIT MAX",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 11,
        "row" : 1,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT latest(isActive) AS `Active Jobs` FROM K8sCronjobSample WHERE (NOT (createdAt IS NULL) AND (entityGuid = '{{entity.id}}'))",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 12,
        "row" : 1,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT if((latest(isSuspended) = 1), 'True', 'False') AS `Suspended` FROM K8sCronjobSample WHERE (NOT (createdAt IS NULL) AND (entityGuid = '{{entity.id}}'))",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 2,
        "height" : 1,
        "width" : 12
      },
      "title" : "",
      "rawConfiguration" : {
        "dataFormatters" : [ {
          "name" : "Created At",
          "type" : "date"
        }, {
          "name" : "Last Scheduled",
          "type" : "date"
        } ],
        "nrqlQueries" : [ {
          "query" : "from(SELECT latest(cronjobName) AS `cronjob`, latest(namespaceName) AS `namespace`, latest(clusterName) AS `cluster`, latest(schedule) AS `schedule`, latest(concurrencyPolicy) AS `concurrencyPolicy`, (latest(createdAt) * 1000) AS `created`, (latest(lastScheduledTime) * 1000) AS `lastScheduled` FROM K8sCronjobSample WHERE (NOT (createdAt IS NULL) AND (entityGuid = '{{entity.id}}'))) with aparse(schedule, '* * * * *') as (mm, hh, day, month, weekday) select latest(cronjob) as 'CronJob Name', latest(namespace) as 'Namespace Name', latest(cluster) as 'Cluster', latest(mm) as 'Minute', latest(hh) as 'Hour', latest(day) as 'Day', latest(month) as 'Month', latest(weekday) as 'Day of the Week', latest(concurrencyPolicy) as 'Concurrency Policy', latest(created) as 'Created At', latest(lastScheduled) as 'Last Scheduled'",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 3,
        "height" : 1,
        "width" : 12
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "## Jobs"
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 4,
        "height" : 1,
        "width" : 6
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "from (FROM K8sJobSample SELECT latest(completedAt - startedAt) AS duration FACET jobName WHERE clusterName = '{{{tags.k8s.clusterName}}}' AND namespaceName = '{{{tags.k8s.namespaceName}}}' AND jobName LIKE '{{{entity.name}}}-%' LIMIT MAX ) select min(duration) as 'Min. Duration (sec)', average(duration) as 'Avg. Duration (sec)', max(duration) as 'Max. Duration (sec)' limit max",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 7,
        "row" : 4,
        "height" : 1,
        "width" : 6
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT latest(specParallelism) AS `Parallelism`, latest(specCompletions) AS `Completions`, latest(specActiveDeadlineSeconds) AS `Active Deadline (sec)` FROM K8sJobSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) AND (jobName LIKE '{{{entity.name}}}-%')) LIMIT MAX",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 5,
        "height" : 3,
        "width" : 12
      },
      "title" : "History",
      "rawConfiguration" : {
        "dataFormatters" : [ {
          "name" : "Created",
          "type" : "duration"
        }, {
          "name" : "Started",
          "type" : "date"
        } ],
        "nrqlQueries" : [ {
          "query" : "SELECT latest(namespaceName) AS `Namespace Name`, latest((createdAt * 1000)) AS `Created`, latest((startedAt * 1000)) AS `Started`, if(latest(isComplete), 'Complete', if(latest(failed), 'Failed', '-')) AS `State`, if(latest(duration), latest(duration), '-') AS `Duration (sec)`, if(latest(failed), latest(if(NOT (failedPodsReason IS NULL), failedPodsReason, 'No reason provided')), '-') AS `Failure Reason` FROM K8sJobSample WITH (completedAt - startedAt) AS `duration` WHERE (((NOT (createdAt IS NULL) AND (clusterName = '{{{tags.k8s.clusterName}}}')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) AND (jobName LIKE '{{{entity.name}}}-%')) FACET jobName AS `Job Name` LIMIT MAX",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        },
        "platformOptions" : {
          "ignoreTimeRange" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 7,
        "height" : 1,
        "width" : 12
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "## Pod metrics"
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 8,
        "height" : 3,
        "width" : 12
      },
      "title" : "Pods",
      "rawConfiguration" : {
        "dataFormatters" : [ ],
        "nrqlQueries" : [ {
          "query" : "from (SELECT latest(K8sPodSample.isReady) AS `ready`, latest(K8sPodSample.isScheduled) AS `scheduled`, latest(status) AS `status` FROM K8sPodSample WHERE clusterName = '{{{tags.k8s.clusterName}}}' AND podName LIKE '{{{entity.name}}}-%' AND namespaceName = '{{{tags.k8s.namespaceName}}}' FACET tuple(podName AS `podname`, nodeName AS `nodename`) LIMIT MAX) select latest(if(ready = 1, 'True', 'False')) as 'Ready', latest(if(scheduled = 1, 'True', 'False')) as 'Scheduled', latest(status) as 'Status' facet podname as 'Pod Name', if(nodename != '', nodename, 'Unassigned') as 'Node Name' limit max",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 11,
        "height" : 3,
        "width" : 4
      },
      "title" : "Network bytes transferred",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT (max(net.txBytesPerSecond) / 1000) AS `Transferred (KBps)` FROM K8sPodSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET podName LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "BYTES"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 5,
        "row" : 11,
        "height" : 3,
        "width" : 4
      },
      "title" : "Network bytes received",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT (max(net.rxBytesPerSecond) / 1000) AS `Received (KBps)` FROM K8sPodSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET podName LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "BYTES"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 11,
        "height" : 3,
        "width" : 4
      },
      "title" : "Network errors / second",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT max(net.errorsPerSecond) AS `Errors (per second)` FROM K8sPodSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET podName LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "COUNT"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 14,
        "height" : 1,
        "width" : 12
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "## Container metrics"
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 15,
        "height" : 3,
        "width" : 12
      },
      "title" : "Containers",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "from(SELECT latest(if(NOT (K8sContainerSample.memoryRequestedBytes IS NULL), ((K8sContainerSample.memoryRequestedBytes / 1024) / 1024), 'Not Set')) AS `mrb`, latest(if(NOT (K8sContainerSample.memoryLimitBytes IS NULL), ((K8sContainerSample.memoryLimitBytes / 1024) / 1024), 'Not Set')) AS `mlb`, latest(if(NOT (K8sContainerSample.cpuRequestedCores IS NULL), K8sContainerSample.cpuRequestedCores, 'Not Set')) AS `crc`, latest(if(NOT (K8sContainerSample.cpuLimitCores IS NULL), K8sContainerSample.cpuLimitCores, 'Not Set')) AS `clc`, sum(K8sContainerSample.restartCountDelta) AS `rcd`, latest(K8sContainerSample.restartCount) AS `rcc`, latest(status) AS `status`, latest(reason) AS `reason` FROM K8sContainerSample WHERE clusterName = '{{{tags.k8s.clusterName}}}' AND podName LIKE '{{{entity.name}}}-%' AND namespaceName = '{{{tags.k8s.namespaceName}}}' FACET tuple(K8sContainerSample.containerName AS `containername`, podName AS `podname`)) select latest(mrb) as 'Memory Requested (MiB)', latest(mlb) as 'Memory Limit (MiB)', latest(crc) as 'CPU Requested (cores)', latest(clc) as 'CPU Limit (cores)', latest(concat(string(rcd, precision: 1), ' / ', string(rcc, precision: 1))) as 'Restarts (delta / cumulative)', latest(concat(status, ' / ', if(reason is null, 'None', reason))) as 'Status / Reason' facet containername as 'Container', podname as 'Pod'",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 18,
        "height" : 3,
        "width" : 4
      },
      "title" : "CPU usage (cores)",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT average(cpuUsedCores) AS `CPU usage (cores)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 5,
        "row" : 18,
        "height" : 3,
        "width" : 4
      },
      "title" : "CPU utilization (%)",
      "rawConfiguration" : {
        "dataFormatters" : [ ],
        "nrqlQueries" : [ {
          "query" : "SELECT (average(cpuCoresUtilization) / 100) AS `CPU utilization (%)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "thresholds" : [ ],
        "units" : {
          "unit" : "PERCENTAGE"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 18,
        "height" : 3,
        "width" : 4
      },
      "title" : "CPU throttling",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT (sum(containerCpuCfsThrottledPeriodsDelta) / sum(containerCpuCfsPeriodsDelta)) AS `CPU throttling (%)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "PERCENTAGE"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 21,
        "height" : 3,
        "width" : 6
      },
      "title" : "Memory usage",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT average(memoryWorkingSetBytes) AS `Memory usage (bytes)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "BYTES"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 7,
        "row" : 21,
        "height" : 3,
        "width" : 6
      },
      "title" : "Memory utilization",
      "rawConfiguration" : {
        "dataFormatters" : [ ],
        "nrqlQueries" : [ {
          "query" : "SELECT (average(memoryWorkingSetUtilization) / 100) AS `Memory utilization (%)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "thresholds" : [ ],
        "units" : {
          "unit" : "PERCENTAGE"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 24,
        "height" : 3,
        "width" : 6
      },
      "title" : "Filesystem used",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT max(fsUsedBytes) AS `Filesystem used (bytes)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "BYTES"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 7,
        "row" : 24,
        "height" : 3,
        "width" : 6
      },
      "title" : "Filesystem utilization",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT (max(fsUsedPercent) / 100) AS `Filesystem Utilization (%)` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "facet" : {
          "showOtherSeries" : false
        },
        "units" : {
          "unit" : "PERCENTAGE"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 27,
        "height" : 3,
        "width" : 12
      },
      "title" : "Container restarts",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "SELECT sum(restartCountDelta) AS `Container restarts` FROM K8sContainerSample WHERE (((clusterName = '{{{tags.k8s.clusterName}}}') AND (podName LIKE '{{{entity.name}}}-%')) AND (namespaceName = '{{{tags.k8s.namespaceName}}}')) FACET tuple(podName, containerName) LIMIT 20 TIMESERIES AUTO",
          "accountId": 0} ],
        "yAxisLeft" : {
          "zero" : true
        },
        "legend" : {
          "enabled" : true
        },
        "units" : {
          "unit" : "COUNT"
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 30,
        "height" : 1,
        "width" : 12
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "## Kubernetes Warning events"
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 31,
        "height" : 3,
        "width" : 9
      },
      "title" : "Warning events",
      "rawConfiguration" : {
        "dataFormatters" : [ {
          "name" : "First Timestamp",
          "type" : "date"
        }, {
          "name" : "Last Timestamp",
          "type" : "date"
        } ],
        "nrqlQueries" : [ {
          "query" : "from InfrastructureEvent select concat(event.involvedObject.kind, ' / ', event.involvedObject.name) as 'Kind / Name', event.message as 'Message', event.reason as 'Reason', if(event.count is not null, event.count, event.series.count) as 'Event Count', event.lastTimestamp as 'Last Timestamp', event.firstTimestamp as 'First Timestamp' where clusterName = '{{{tags.k8s.clusterName}}}' and event.metadata.namespace = '{{{tags.k8s.namespaceName}}}' and category = 'kubernetes' and (event.involvedObject.name = '{{{entity.name}}}' OR event.involvedObject.name like '%{{{entity.name}}}%') and event.type = 'Warning' limit 100",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        }
      }
    }, {
      "visualization" : {
        "id" : "viz.stacked-bar"
      },
      "layout" : {
        "column" : 10,
        "row" : 31,
        "height" : 3,
        "width" : 3
      },
      "title" : "Warning events",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "query" : "from InfrastructureEvent select count(concat(event.type, ':', event.reason)) as 'Reason (Type)' where clusterName = '{{{tags.k8s.clusterName}}}' and event.metadata.namespace = '{{{tags.k8s.namespaceName}}}' and category = 'kubernetes' and (event.involvedObject.name = '{{{entity.name}}}' OR event.involvedObject.name like '%{{{entity.name}}}%') and event.type = 'Warning' facet event.reason TIMESERIES limit 100",
          "accountId": 0} ],
        "facet" : {
          "showOtherSeries" : false
        }
      }
    } ]
  } ]
}
