requests:
  title: Requests per second
  unit: OPERATIONS_PER_SECOND
  queries:
    newRelic:
      select: average(net.requestsPerSecond)
      from: NginxSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: sum(`nginx.requests`) / sum((endTimestamp - timestamp) / 1000)
      from: Metric
      where: instrumentation.provider = 'opentelemetry' AND metricName = 'nginx.requests'
      eventId: entity.guid
      eventName: entity.name

activeConnections:
  title: Active Connections
  unit: COUNT
  queries:
    newRelic:
      select: average(net.connectionsActive)
      from: NginxSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: average(nginx.connections_current)
      from: Metric
      where: state = 'active' AND instrumentation.provider = 'opentelemetry' AND metricName = 'nginx.connections_current'
      eventId: entity.guid
      eventName: entity.name

connectionsAccepted:
  title: Connections Accepted per second
  unit: OPERATIONS_PER_SECOND
  queries:
    newRelic:
      select: average(net.connectionsAcceptedPerSecond)
      from: NginxSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: sum(`nginx.connections_accepted`) / sum((endTimestamp - timestamp) / 1000)
      from: Metric
      where: instrumentation.provider = 'opentelemetry' AND metricName = 'nginx.connections_accepted'
      eventId: entity.guid
      eventName: entity.name

connectionsDropped:
  title: Connections Dropped per second
  unit: OPERATIONS_PER_SECOND
  queries:
    newRelic:
      select: average(net.connectionsDroppedPerSecond)
      from: NginxSample
      eventId: entityGuid
      eventName: entityName
    opentelemetry:
      select: (sum(connections_accepted) - sum(connections_handled)) / sum((endTimestamp - timestamp) / 1000)
      from: Metric
      where: instrumentation.provider = 'opentelemetry' AND (metricName = 'nginx.connections_accepted' OR metricName = 'nginx.connections_handled')
      eventName: entity.name
