domain: INFRA
type: KUBERNETES_REPLICASET
configuration:
  entityExpirationTime: DAILY
  alertable: true
goldenTags:
- k8s.clusterName
- k8s.namespaceName
synthesis:
  rules:
    # kube-state-metrics data via opentelemetry prometheusReceiver
    - compositeIdentifier:
        separator: ":"
        attributes:
          - k8s.cluster.name
          - k8s.namespace.name
          - k8s.replicaset.name
      encodeIdentifierInGUID: true
      name: k8s.replicaset.name
      conditions:
        # kube-state-metrics 
        - attribute: metricName
          prefix: kube_replicaset_owner
        # identifier attributes
        - attribute: k8s.replicaset.name
          present: true
        - attribute: k8s.namespace.name
          present: true
        - attribute: k8s.cluster.name
          present: true
        # open telemetry
        - attribute: newrelic.source
          value: 'api.metrics.otlp'
        # if service.name is present, it's a service
        - attribute: service.name
          present: false
      tags:
        k8s.replicaset.name:
          entityTagNames: [k8s.replicasetName]
        k8s.namespace.name:
          entityTagNames: [k8s.namespaceName]
        k8s.cluster.name:
          entityTagNames: [k8s.clusterName]
        newrelic.chart.version:
          entityTagNames: [newrelic.chartVersion]
          ttl: P1D

      name: displayName
      legacyFeatures:
        overrideGuidType: true
        useNonStandardAttributes: true
      conditions:
        - attribute: eventType
          value: K8sNamespaceSample
        - attribute: namespaceName
          present: true
        # - attribute: status
        #   value: Active
      tags:
        clusterName:
          entityTagName: k8s.clusterName
        replicasetName:
          entityTagName: k8s.replicasetName
        namespaceName:
          entityTagName: k8s.namespaceName
        instanceType:
          entityTagName: host.instanceType
        integrationName:
          entityTagName: newrelic.integrationName
        integrationVersion:
          entityTagName: newrelic.integrationVersion
        agentVersion:
          entityTagName: newrelic.agentVersion
        awsRegion:
          entityTagName: aws.region
        provider.awsRegion:
          entityTagName: aws.region
      prefixedTags:
        label.: