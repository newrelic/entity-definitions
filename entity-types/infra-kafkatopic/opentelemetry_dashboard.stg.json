{
  "name": "OTEL Kafka Topic",
  "description": "Health and performance metrics for Kafka Topics",
  "pages": [
    {
      "name": "Topic Overview",
      "widgets": [
        {
          "title": "Topic Partitions",
          "layout": {
            "column": 1,
            "row": 1,
            "height": 2,
            "width": 3
          },
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(kafka.topic.partitions) AS `Topic Partitions` FROM Metric WHERE metricName = 'kafka.topic.partitions'"
              }
            ]
          }
        },
        {
          "title": "Replication Factor",
          "layout": {
            "column": 4,
            "row": 1,
            "height": 2,
            "width": 3
          },
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(kafka.topic.replication_factor) AS `Replication Factor` FROM Metric WHERE metricName = 'kafka.topic.replication_factor'"
              }
            ]
          }
        },
        {
          "title": "Replication Health",
          "layout": {
            "column": 7,
            "row": 1,
            "height": 3,
            "width": 6
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "select sum(Total_Replicas) as 'Total Replicas' from (SELECT average(kafka.partition.replicas) AS 'Total_Replicas' FROM Metric WHERE metricName = 'kafka.partition.replicas' FACET partition,entity.guid TIMESERIES AUTO) TIMESERIES AUTO"
              },
              {
                "accountId": 0,
                "query": "SELECT sum(In_Sync_Replicas) as 'In-Sync Replicas' FROM (SELECT average(kafka.partition.replicas_in_sync) AS 'In_Sync_Replicas' FROM Metric WHERE metricName = 'kafka.partition.replicas_in_sync' FACET partition,entity.guid TIMESERIES AUTO) TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Min In-Sync Replicas",
          "layout": {
            "column": 1,
            "row": 3,
            "height": 1,
            "width": 6
          },
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(kafka.topic.min_insync_replicas) AS 'Min In-Sync Replicas' FROM Metric WHERE metricName = 'kafka.topic.min_insync_replicas'"
              }
            ]
          }
        },
        {
          "title": "Messages In Per Second",
          "layout": {
            "column": 1,
            "row": 4,
            "height": 3,
            "width": 6
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT rate(sum(kafka.prod.msg.count), 1 second) AS `Messages In per Second` FROM Metric WHERE metricName = 'kafka.prod.msg.count' TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Data Throughput (Bytes/sec)",
          "layout": {
            "column": 7,
            "row": 4,
            "height": 3,
            "width": 6
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "filter(rate(sum(kafka.topic.io), 1 second), WHERE (state = 'in' or direction = 'in')) AS `Bytes In`, filter(rate(sum(kafka.topic.io), 1 second), WHERE (state = 'out' or direction = 'out')) AS `Bytes Out` FROM Metric WHERE metricName = 'kafka.topic.io' TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Consumer Group Lag (Total Messages)",
          "layout": {
            "column": 1,
            "row": 7,
            "height": 3,
            "width": 6
          },
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT max(kafka.consumer_group.lag_sum) AS `Consumer Lag` FROM Metric WHERE metricName = 'kafka.consumer_group.lag_sum' TIMESERIES AUTO FACET group"
              }
            ]
          }
        },
        {
          "title": "Partition Lag (messages)",
          "layout": {
            "column": 7,
            "row": 7,
            "height": 3,
            "width": 6
          },
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "initialSorting": {
              "direction": "desc",
              "name": "Max Lag"
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT max(kafka.consumer_group.lag) AS `Max Lag` FROM Metric WHERE metricName = 'kafka.consumer_group.lag' FACET group, partition"
              }
            ]
          }
        }
      ]
    }
  ]
}
