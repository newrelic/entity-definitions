domain: EXT
type: SERVICE
goldenTags:
  - instrumentation.provider
  - k8s.clusterName
  - k8s.namespaceName
synthesis:
  rules:
    # telemetry with service_name attribute
  - identifier: service_name
    name: service_name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: service_name
    tags:
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:

    # telemetry with serviceName attribute
  - identifier: serviceName
    name: serviceName
    encodeIdentifierInGUID: true
    conditions:
    - attribute: serviceName
    tags:
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:

    # telemetry from opentelemetry provider without instrumentation.provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: telemetry.sdk.name
      value: opentelemetry
    - attribute: instrumentation.provider
      present: false
    tags:
      k8s.cluster.name:
        ttl: P1D
      k8s.deployment.name:
        ttl: P1D
      k8s.namespace.name:
        ttl: P1D
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:
      service.namespace:

    # telemetry from opentelemetry provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: opentelemetry
    tags:
      k8s.cluster.name:
        ttl: P1D
      k8s.deployment.name:
        ttl: P1D
      k8s.namespace.name:
        ttl: P1D
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:
      service.namespace:

    # telemetry from NewRelic opentelemetry distribution
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: newrelic-opentelemetry
    tags:
      k8s.cluster.name:
        ttl: P1D
      k8s.deployment.name:
        ttl: P1D
      k8s.namespace.name:
        ttl: P1D
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:
      service.namespace:

    # telemetry from kamon-agent provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: kamon-agent
    tags:
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:

    # telemetry from micrometer provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: micrometer
    tags:
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:

    # telemetry from JFR-Uploader provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: JFR-Uploader
    tags:
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:

    # telemetry from pixie provider
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: instrumentation.provider
      value: pixie
    tags:
      k8s.cluster.name:
        entityTagName: k8s.clusterName
        ttl: P1D
      k8s.namespace.name:
        entityTagName: k8s.namespaceName
        ttl: P1D
      k8s.deployment.name:
        entityTagName: k8s.deploymentName
        ttl: P1D

    # IMPORTANT:
    # This rule matches on any telemetry with service.name
    # which is too broad for some telemetry sources, resulting
    # in matches that are not actually about services.  We're
    # keeping it for backwards compatibility reasons but it
    # is being ignored in some internal services while we add
    # a configuration option to choose the relevant ingestion
    # sources for each rule.
  - identifier: service.name
    name: service.name
    encodeIdentifierInGUID: true
    conditions:
    - attribute: service.name
    tags:
      telemetry.sdk.name:
        entityTagName: instrumentation.provider
      telemetry.sdk.language:
        entityTagName: language
      telemetry.sdk.version:


configuration:
  entityExpirationTime: EIGHT_DAYS
  alertable: true
