domain: INFRA
type: KUBERNETES_DAEMONSET
configuration:
  entityExpirationTime: DAILY
  alertable: true
goldenTags:
- k8s.daemonsetName
- k8s.clusterName
- k8s.namespaceName
synthesis:
  rules:
    # kube-state-metrics data via opentelemetry prometheusReceiver 
    - compositeIdentifier:
        separator: ":"
        attributes:
          - k8s.cluster.name
          - namespace
          - daemonset
      encodeIdentifierInGUID: true
      name: daemonset
      conditions:
        # kube-state-metrics daemonset prefix
        - attribute: metricName
          prefix: kube_daemonset_
        # identifier attributes
        - attribute: daemonset
          present: true
        - attribute: namespace
          present: true
        - attribute: k8s.cluster.name
          present: true
        # open telemetry
        - attribute: newrelic.source
          value: 'api.metrics.otlp'
        # if service.name is present, it's a service
        - attribute: service.name
          present: false
        # value added for test entities only
        - attribute: newrelicOnly
          value: "true"
      tags:
        daemonset:
          entityTagNames: [k8s.daemonsetName]
        namespace:
          entityTagNames: [k8s.namespaceName]
        k8s.cluster.name:
          entityTagNames: [k8s.clusterName]