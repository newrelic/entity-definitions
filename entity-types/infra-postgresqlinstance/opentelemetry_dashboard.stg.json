{
  "name": "PostgreSQLOtel",
  "pages": [
    {
      "name": "PostgreSQL Queries",
      "widgets": [
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 1,
            "row": 1,
            "height": 3,
            "width": 4
          },
          "title": "Databases (unique query count)",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT uniqueCount(db.query.text) FROM Log WHERE db.instance IS NOT NULL FACET db.namespace",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.table"
          },
          "layout": {
            "column": 5,
            "row": 1,
            "height": 3,
            "width": 4
          },
          "title": "Average execution time (ms)",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.total_exec_time) / latest(postgresql.calls) AS averageExecutionTimems FROM Log WHERE postgresql.total_exec_time IS NOT NULL FACET db.query.text",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 9,
            "row": 1,
            "height": 3,
            "width": 4
          },
          "title": "Execution count trends",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT uniqueCount(exec_count) FROM (SELECT latest(postgresql.calls) AS exec_count FROM Log WHERE event.name='db.server.top_query' AND postgresql.calls IS NOT NULL FACET postgresql.queryid LIMIT MAX) TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 4,
            "height": 3,
            "width": 4
          },
          "title": "Average disk reads",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.shared_blks_read)/latest(postgresql.calls) FROM Log FACET db.namespace TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 5,
            "row": 4,
            "height": 3,
            "width": 4
          },
          "title": "Average disk writes",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.shared_blks_written)/latest(postgresql.calls) FROM Log FACET db.namespace TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 9,
            "row": 4,
            "height": 3,
            "width": 4
          },
          "title": "Wait Events trend",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT count(postgresql.wait_event) FROM Log WHERE postgresql.wait_event IS NOT NULL AND postgresql.wait_event_type NOT IN ('Client','') FACET postgresql.wait_event TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 7,
            "height": 3,
            "width": 4
          },
          "title": "Scheduled checkpoints",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT sum(postgresql.bgwriter.checkpoint.count) FROM Metric WHERE type = 'scheduled' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 5,
            "row": 7,
            "height": 3,
            "width": 4
          },
          "title": "Requested checkpoints",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT sum(postgresql.bgwriter.checkpoint.count) FROM Metric WHERE type = 'requested' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 9,
            "row": 7,
            "height": 3,
            "width": 4
          },
          "title": "Buffers written for checkpoint",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.buffers.writes) FROM Metric WHERE source = 'checkpoints' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 10,
            "height": 3,
            "width": 4
          },
          "title": "Buffers written by background writer",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.buffers.writes) FROM Metric WHERE source = 'bgwriter' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 5,
            "row": 10,
            "height": 3,
            "width": 4
          },
          "title": "Background writer stops",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.maxwritten) FROM Metric TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 9,
            "row": 10,
            "height": 3,
            "width": 4
          },
          "title": "Buffers written per backend",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.buffers.writes) FROM Metric WHERE source='backend' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 13,
            "height": 3,
            "width": 4
          },
          "title": "Buffers allocated",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.buffers.allocated) FROM Metric TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 5,
            "row": 13,
            "height": 3,
            "width": 4
          },
          "title": "Backend fsync Calls",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT latest(postgresql.bgwriter.buffers.writes) FROM Metric WHERE source='backend_fsync' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 9,
            "row": 13,
            "height": 3,
            "width": 4
          },
          "title": "Checkpoint write Time",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT rate(sum(postgresql.bgwriter.duration), 1 second) AS `Checkpoint Write Time (ms/sec)` FROM Metric WHERE metricName = 'postgresql.bgwriter.duration' AND type = 'write' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 16,
            "height": 3,
            "width": 4
          },
          "title": "Checkpoint sync Time",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "query": "SELECT rate(sum(postgresql.bgwriter.duration), 1 second) AS `Checkpoint Sync Time (ms/sec)` FROM Metric WHERE metricName = 'postgresql.bgwriter.duration' AND type = 'sync' TIMESERIES AUTO",
                "accountId": 0}
            ]
          }
        }
      ]
    }
  ]
}