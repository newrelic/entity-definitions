domain: INFRA
type: KUBERNETES_POD
configuration:
  entityExpirationTime: FOUR_HOURS
  alertable: true
goldenTags:
- k8s.status
- k8s.clusterName
- k8s.namespaceName
- k8s.nodeName
- k8s.createdBy
- k8s.createdKind
synthesis:
  rules:
  # kube-state-metrics data via opentelemetry prometheusReceiver 
  - compositeIdentifier:
      separator: ":"
      attributes:
        - k8s.cluster.name
        - namespace
        - pod
    encodeIdentifierInGUID: true
    name: pod
    conditions:
      # kube-state-metrics pod prefix
      - attribute: metricName
        prefix: kube_pod_
      # exclude kube_pod_container_*
      - attribute: container
        present: false
      # identifier attributes
      - attribute: pod
        present: true
      - attribute: namespace
        present: true
      - attribute: k8s.cluster.name
        present: true
      # open telemetry
      - attribute: newrelic.source
        value: 'api.metrics.otlp'
      # if service.name is present, handle as one
      - attribute: service.name
        present: false
      # value added for test entities only
      - attribute: newrelicOnly
        value: "true"
    tags:
      phase:
        # from kube-state-metrics kube_pod_status_phase
        multiValue: false
        entityTagNames: [k8s.status]
      namespace:
        entityTagNames: [k8s.namespaceName]
      k8s.cluster.name:
        entityTagNames: [k8s.clusterName]
      node:
        # from kube-state-metrics kube_pod_info
        entityTagNames: [k8s.nodeName]
      created_by_name:
        # from kube-state-metrics kube_pod_info
        entityTagNames: [k8s.createdBy]
      created_by_kind:
        # from kube-state-metrics kube_pod_info
        entityTagNames: [k8s.createdKind]

  # Infrastructure event data via opentelemetry 
  - compositeIdentifier:
      separator: ":"
      attributes:
        - k8s.cluster.name
        - k8.namespace.name
        - k8s.object.name
    encodeIdentifierInGUID: true
    name: k8s.object.name
    conditions:
      - attribute: event.name
        value: InfrastructureEvent
      - attribute: k8s.object.kind
        value: Pod
      # identifier attributes
      - attribute: k8s.object.name
        present: true
      - attribute: k8.namespace.name
        present: true
      - attribute: k8s.cluster.name
        present: true
      # open telemetry
      - attribute: newrelic.source
        value: api.events.otlp
      # if service.name is present, handle as one
      - attribute: service.name
        present: false
      # value added for test entities only
      - attribute: newrelicOnly
        value: "true"
  - compositeIdentifier:
      separator: ":"
      attributes:
        - k8s.cluster.name
        - k8s.namespace.name
        - k8s.pod.name
    encodeIdentifierInGUID: true
    name: k8s.pod.name
    conditions:
      # identifier attributes
      - attribute: k8s.pod.name
        present: true
      - attribute: k8s.namespace.name
        present: true
      - attribute: k8s.cluster.name
        present: true
      # ebpf data
      - attribute: instrumentation.provider
        value: "nr_ebpf_agent"
    tags:
      k8s.pod.name:
        entityTagNames: [k8s.podName]
      k8s.namespace.name:
        entityTagNames: [k8s.namespaceName]
      k8s.cluster.name:
        entityTagNames: [k8s.clusterName]
      k8s.node.name:
        entityTagNames: [k8s.nodeName]

  - identifier: entityId
    name: podName
    legacyFeatures:
      overrideGuidType: true
    conditions:
      - attribute: eventType
        value: K8sPodSample
      - attribute: podName
        present: true
      - attribute: isScheduled
        present: true
    tags:
      clusterName:
        entityTagName: k8s.clusterName
      createdBy:
        entityTagName: k8s.createdBy
      createdKind:
        entityTagName: k8s.createdKind
      deploymentName:
        entityTagName: k8s.deploymentName
      daemonsetName:
        entityTagName: k8s.daemonsetName
      jobName:
        entityTagName: k8s.jobName
      replicasetName:
        entityTagName: k8s.replicasetName
      statefulsetName:
        entityTagName: k8s.statefulsetName
      namespaceName:
        entityTagName: k8s.namespaceName
      namespace:
        entityTagName: k8s.namespaceName
      nodeIp:
        entityTagName: k8s.nodeIp
      podIp:
        entityTagName: k8s.podIp
      nodeName:
        entityTagName: k8s.nodeName
      podName:
        entityTagName: k8s.podName
      reason:
        entityTagName: k8s.reason
      status:
        entityTagName: k8s.status
        multiValue: false
      instanceType:
        entityTagName: host.instanceType
      integrationName:
        entityTagName: newrelic.integrationName
      integrationVersion:
        entityTagName: newrelic.integrationVersion
      agentVersion:
        entityTagName: newrelic.agentVersion
      awsRegion:
        entityTagName: aws.region
      provider.awsRegion:
        entityTagName: aws.region
    prefixedTags:
      label.:
