errorRate:
  title: Error rate %
  unit: PERCENTAGE
  queries:
    aws:
      select: 100 * sum(aws.lambda.Errors.byFunctionAlias) / sum(aws.lambda.Invocations.byFunctionAlias)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: sum(provider.errors.Sum) * 100 / sum(provider.invocations.Sum)
      from: ServerlessSample
      where: provider='LambdaFunction'
      eventId: entityGuid
      eventName: entityName
totalInvocations:
  title: Total Invocations
  unit: REQUESTS_PER_MINUTE
  queries:
    aws:
      select: rate(sum(aws.lambda.Invocations.byFunctionAlias), 1 minute)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: rate(sum(provider.invocations.Sum),1 minute)
      from: ServerlessSample
      where: provider='LambdaFunction'
      eventId: entityGuid
      eventName: entityName
duration99PercentileS:
  title: Duration (99 percentile) (s)
  unit: SECONDS
  queries:
    aws:
      select: max(aws.lambda.Duration.byFunctionAlias) / 1000
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: max(provider.duration.Maximum) / 1000
      from: ServerlessSample
      where: provider='LambdaFunction'
      eventId: entityGuid
      eventName: entityName
throttles:
  title: Throttled invocations
  unit: COUNT        
  queries:
    aws:
      select: rate(sum(aws.lambda.Throttles.byFunctionAlias), 1 minute)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: rate(sum(provider.throttles.Sum), 1 minute)
      from: ServerlessSample
      where: provider='LambdaFunction'
      eventId: entityGuid
      eventName: entityName
