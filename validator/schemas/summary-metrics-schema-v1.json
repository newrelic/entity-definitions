{
  "$schema": "http://json-schema.org/draft-06/schema",
  "$id": "summary-metrics-schema-v1",
  "type": "object",
  "title": "Summary Metrics schema",
  "description": "The contents of each summary metric.",
  "minProperties": 1,
  "examples": [
    {
      "volumeRead": {
        "title": "What the user is seeing (unit)",
        "unit": "COUNT",
        "query": {
          "select": "sum(`provider.volumeReadOps.Sum`)",
          "from": "Metric",
          "where": "",
          "eventId": "entity.guid"
        }
      }
    }
  ],
  "additionalProperties": {
    "type": "object",
    "required": [
      "unit"
    ],
    "oneOf": [
      {
        "required": [
          "title"
        ]
      },
      {
        "required": [
          "hidden"
        ]
      }
    ],
    "oneOf": [
      {
        "required": [
          "query"
        ]
      },
      {
        "required": [
          "tag"
        ]
      },
      {
        "required": [
          "derive"
        ]
      }
    ],
    "properties": {
      "title": {
        "$id": "#/properties/title",
        "type": "string",
        "title": "The title",
        "examples": [
          "What the user is seeing (unit)"
        ]
      },
      "unit": {
        "$id": "#/properties/title",
        "type": "string",
        "title": "The unit of the metric",
        "enum": ["REQUESTS_PER_SECOND","PAGES_PER_SECOND","MESSAGES_PER_SECOND","OPERATIONS_PER_SECOND","COUNT","SECONDS","PERCENTAGE","BITS","BYTES","BITS_PER_SECOND","BYTES_PER_SECOND","HERTZ","APDEX","TIMESTAMP","STRING"],
        "examples": [
          "COUNT"
        ]
      },
      "hidden": {
        "$id": "#/properties/hidden",
        "type": "boolean",
        "title": "Whether the metric shows up on the UI or not"
      },
      "query": {
        "$id": "#/properties/query",
        "type": "object",
        "title": "The NRDB query to build the metric",
        "description": "Information about the query to get the summary metric.",
        "examples": [
          {
            "select": "sum(metricName)",
            "from": "Metric",
            "where": "",
            "eventId": "entity.guid"
          }
        ],
        "required": [
          "select",
          "from",
          "eventId"
        ],
        "properties": {
          "select": {
            "$id": "#/properties/query/properties/select",
            "type": "string",
            "title": "The query's select",
            "examples": [
              "sum(metricName)"
            ]
          },
          "from": {
            "$id": "#/properties/query/properties/from",
            "type": "string",
            "title": "The query's from",
            "examples": [
              "Metric"
            ]
          },
          "where": {
            "$id": "#/properties/query/properties/where",
            "type": "string",
            "title": "The query's where",
            "examples": [
              "condition is true"
            ]
          },
          "eventId": {
            "$id": "#/properties/query/properties/eventId",
            "type": "string",
            "title": "The query's eventId",
            "examples": [
              "entity.guid"
            ]
          },
          "eventObjectId": {
            "$id": "#/properties/query/properties/eventObjectId",
            "type": "string",
            "enum": ["DOMAIN_IDS","ENTITY_GUIDS"]
          }
        },
        "additionalProperties": false
      },
      "tag": {
        "$id": "#/properties/tag",
        "type": "object",
        "title": "The tag to build the metric from",
        "description": "Information about the tag to get the summary metric.",
        "examples": [
          {
            "key": "tagKey"
          }
        ],
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "$id": "#/properties/tag/properties/key",
            "type": "string",
            "title": "The tag key you want to fetch the corresponding value for",
            "examples": [
              "environment"
            ]
          }
        },
        "additionalProperties": false
      },
      "derive": {
        "$id": "#/properties/derive",
        "type": "string",
        "title": "The derive string",
        "description": "The derive string can be used to derive metric out of other metrics",
        "examples": [
          "(@metricA * 100) / (@metricB + @metricC)"
        ]
      }
    },
    "additionalProperties": false
  }
}
