providerName:
  tag:
    key: instrumentation.provider
  title: Provider
  unit: STRING
throughput:
  title: Throughput
  unit: REQUESTS_PER_SECOND
  queries:
    opentelemetry:
      select: rate(count(*), 1 second)
      from: Span
      where: span.kind LIKE 'server' OR span.kind LIKE 'consumer' OR kind LIKE 'server' OR kind LIKE 'consumer'
      eventId: entity.guid
    kamon-agent:
      select: rate(sum(http.server.requests), 1 second)
      from: Metric
      eventId: entity.guid
    micrometer:
      select: rate(sum(http.server.requests), 1 second)
      from: Metric
      eventId: entity.guid
    pixie:
      select: rate(count(http.server.duration), 1 second)
      from: Metric
      eventId: entity.guid
errorRate:
  title: Error rate
  unit: PERCENTAGE
  queries:
    opentelemetry:
      select: filter(count(*), where error.message IS NOT NULL) / count(*)
      from: Span
      eventId: entity.guid
    kamon-agent:
      select: filter(sum(http.server.requests), where http.status_code = '5xx') / sum(http.server.requests)
      from: Metric
      eventId: entity.guid
    micrometer:
      select: filter(sum(http.server.requests), where exception IS NOT NULL and exception != 'None') / sum(http.server.requests)
      from: Metric
      eventId: entity.guid
    pixie:
      select: filter(count(http.server.duration), where http.status_code >= 400 AND http.status_code != 404) / count(http.server.duration)
      from: Metric
      eventId: entity.guid
responseTimeMs:
  title: Response time
  unit: SECONDS
  queries:
    opentelemetry:
      select: average(duration.ms) / 1000
      from: Span
      where: span.kind LIKE 'server' OR span.kind LIKE 'consumer' OR kind LIKE 'server' OR kind LIKE 'consumer'
      eventId: entity.guid
    kamon-agent:
      select: average(http.server.requests) / 1000
      from: Metric
      eventId: entity.guid
    micrometer:
      select: average(http.server.requests) / 1000
      from: Metric
      eventId: entity.guid
    pixie:
      select: average(http.server.duration) / 1000
      from: Metric
      eventId: entity.guid
