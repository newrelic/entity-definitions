relationships:
  - name: k8sJobContainsPod
    version: "1"
    origins: 
      - Kubernetes Integration
    conditions:
      - attribute: eventType
        anyOf: [ "K8sPodSample" ]
      - attribute: createdKind
        anyOf: [ "Job" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        buildGuid:
          account:
            lookup: true  
          domain:
            value: INFRA
          type:
            value: KUBERNETES_JOB
            valueInGuid: NA
          identifier:
            fragments:
              - value: "k8s:"
              - attribute: clusterName
              - value: ":"
              - attribute: namespaceName
              - value: ":job:"
              - attribute: createdBy
            hashAlgorithm: FARM_HASH
      target:
        extractGuid:
          attribute: entityGuid
          entityType:
            value: KUBERNETES_POD
  - name: otelKsmK8sJobContainsPod
    # use kube-state-metrics kube_pod_owner metric
    version: "1"
    origins: 
      - OpenTelemetry
    conditions:
      - attribute: eventType
        anyOf: [ "Metric" ]
      - attribute: metricName
        anyOf: [ "kube_pod_owner" ]
      - attribute: owner_kind
        anyOf: [ "Job" ]
      - attribute: newrelicOnly
        anyOf: [ "true" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        buildGuid:
          account:
            lookup: true  
          domain:
            value: INFRA
          type:
            value: KUBERNETES_JOB
          identifier:
            fragments:
              - attribute: k8s.cluster.name
              - value: ":"
              - attribute: namespace
              - value: ":"
              - attribute: owner_name
            hashAlgorithm: FARM_HASH
      target:
        extractGuid:
          attribute: entityGuid
          entityType:
            value: KUBERNETES_POD