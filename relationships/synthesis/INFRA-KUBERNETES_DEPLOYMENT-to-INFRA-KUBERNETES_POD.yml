relationships:
  - name: k8sDeploymentContainsPod
    version: "1"
    origins: 
      - Kubernetes Integration
    conditions:
      - attribute: eventType
        anyOf: [ "K8sPodSample" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        buildGuid:
          account:
            lookup: true 
          domain:
            value: INFRA
          type:
            value: KUBERNETES_DEPLOYMENT
            valueInGuid: NA
          identifier:
            fragments:
              - value: "k8s:"
              - attribute: clusterName
              - value: ":"
              - attribute: namespaceName
              - value: ":deployment:"
              - attribute: deploymentName
            hashAlgorithm: FARM_HASH
      target:
        extractGuid:
          attribute: entityGuid
          entityType:
            value: KUBERNETES_POD
  - name: otelKsmK8sDeploymentContainsPod
    # use kube-state-metrics kube_pod_owner metric
    version: "1"
    origins: 
      - OpenTelemetry
    conditions:
      - attribute: metricName
        anyOf: [ "kube_pod_owner" ]
      - attribute: owner_kind
        anyOf: [ "ReplicaSet" ]
      - attribute: newrelicOnly
        anyOf: [ "true" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        buildGuid:
          account:
            lookup: true 
          domain:
            value: INFRA
          type:
            value: KUBERNETES_DEPLOYMENT
          identifier:
            fragments:
              - attribute: k8s.cluster.name
              - value: ":"
              - attribute: namespace
              - value: ":"
              # The immediate owner is a ReplicaSet; its name is composed `DeploymentName-hash`
              # This extracts the name of the Deployment which created the ReplicaSet. 
              # In fringe scenarios this may fail due to find the correct name due to the 
              # Deployment name being truncated so the ReplicaSet name isn't too long.
              # Ideally this would use a join of the data on `kube_replicaset_owner` 
              # (which has the raw deployment name) with `kube_pod_owner`, but joins aren't 
              # available in this streaming context.
              - capture:                
                attribute: owner_name
                regex: "^(.*)-(?:[^-]+)$"
            hashAlgorithm: FARM_HASH
      target:
        extractGuid:
          attribute: entity.guid
          entityType:
            value: KUBERNETES_POD