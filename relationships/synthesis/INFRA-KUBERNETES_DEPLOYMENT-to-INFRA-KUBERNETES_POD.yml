relationships:
  - name: k8sDeploymentContainsPod
    version: "1"
    origins: 
      - Kubernetes Integration
    conditions:
      - attribute: eventType
        anyOf: [ "K8sPodSample" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        buildGuid:
          account:
            lookup: true 
          domain:
            value: INFRA
          type:
            value: KUBERNETES_DEPLOYMENT
            valueInGuid: NA
          identifier:
            fragments:
              - value: "k8s:"
              - attribute: clusterName
              - value: ":"
              - attribute: namespaceName
              - value: ":deployment:"
              - attribute: deploymentName
            hashAlgorithm: FARM_HASH
      target:
        extractGuid:
          attribute: entityGuid
          entityType:
            value: KUBERNETES_POD
  - name: otelKsmK8sDeploymentContainsPod
    # use kube-state-metrics kube_pod_owner metric
    version: "1"
    origins: 
      - OpenTelemetry
    conditions:
      - attribute: metricName
        anyOf: [ "kube_pod_owner" ]
      - attribute: owner_kind
        anyOf: [ "ReplicaSet" ]
      - attribute: newrelicOnly
        anyOf: [ "true" ]
    relationship:
      expires: P75M
      relationshipType: CONTAINS
      source:
        lookupGuid:
          candidateCategory: KUBERNETES_DEPLOYMENT
          fields:
            - field: replicaset # replicaset owned by deployment
              attribute: owner_name # replicaset which owns pod
            - field: namespace # namespace of deployment
              attribute: namespace # namespace of pod
            - field: cluster # cluster of deployment
              attribute: k8s.cluster.name # cluster of pod
      target:
        extractGuid:
          attribute: entity.guid
          entityType:
            value: KUBERNETES_POD